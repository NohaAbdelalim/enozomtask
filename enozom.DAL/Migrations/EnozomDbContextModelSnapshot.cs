// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using enozom.DAL.Data;

#nullable disable

namespace enozom.DAL.Migrations
{
    [DbContext(typeof(EnozomDbContext))]
    partial class EnozomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("enozom.Domain.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Clean Code"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Algorithms"
                        });
                });

            modelBuilder.Entity("enozom.Domain.Models.BookCopy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookCopy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            status = "Good"
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            status = "Good"
                        },
                        new
                        {
                            Id = 3,
                            BookId = 1,
                            status = "Good"
                        });
                });

            modelBuilder.Entity("enozom.Domain.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Ali@enozom.com",
                            Name = "Ali",
                            Phone = "0122224400"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Mohamed@enozom.com",
                            Name = "Mohamed",
                            Phone = "0111155000"
                        },
                        new
                        {
                            Id = 3,
                            Email = "ahmed@enozom.com",
                            Name = "Ahmed",
                            Phone = "0155553311"
                        });
                });

            modelBuilder.Entity("enozom.Domain.Models.StudentBorrowBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CopyId")
                        .HasColumnType("int");

                    b.Property<string>("ReturnStatus")
                        .HasColumnType("longtext");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("actualReturnDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("borrowedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("expectedReturnDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CopyId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentBorrowBook");
                });

            modelBuilder.Entity("enozom.Domain.Models.BookCopy", b =>
                {
                    b.HasOne("enozom.Domain.Models.Book", "book")
                        .WithMany("BookCopies")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("book");
                });

            modelBuilder.Entity("enozom.Domain.Models.StudentBorrowBook", b =>
                {
                    b.HasOne("enozom.Domain.Models.BookCopy", "bookCopy")
                        .WithMany("StudentBorrowBook")
                        .HasForeignKey("CopyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("enozom.Domain.Models.Student", "student")
                        .WithMany("StudentBorrowBook")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bookCopy");

                    b.Navigation("student");
                });

            modelBuilder.Entity("enozom.Domain.Models.Book", b =>
                {
                    b.Navigation("BookCopies");
                });

            modelBuilder.Entity("enozom.Domain.Models.BookCopy", b =>
                {
                    b.Navigation("StudentBorrowBook");
                });

            modelBuilder.Entity("enozom.Domain.Models.Student", b =>
                {
                    b.Navigation("StudentBorrowBook");
                });
#pragma warning restore 612, 618
        }
    }
}
